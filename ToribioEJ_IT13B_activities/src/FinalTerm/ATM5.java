/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package it13b;

/**
 *
 * @author Jayboy
 */
public class ATM5 extends javax.swing.JFrame {

    // Add balance variable
    private double balance = 0.00; // Initial balance
    
    // Add transaction tracking with categories
    private java.util.List<Transaction> transactions = new java.util.ArrayList<>();
    
    // Add card number
    private String cardNumber = "Not Available"; // Default value
    
    // Add PIN
    private String pin = "Not Available"; // Default value

    // Transaction class to store transaction details
    private static class Transaction {
        String type;
        double amount;
        String timestamp;
        String category;
        
        Transaction(String type, double amount, String timestamp, String category) {
            this.type = type;
            this.amount = amount;
            this.timestamp = timestamp;
            this.category = category;
        }
        
        @Override
        public String toString() {
            return String.format("%s: ₱%.2f (%s) at %s", type, amount, category, timestamp);
        }
    }

    /**
     * Creates new form ATM5 with card number and PIN
     */
    public ATM5(String cardNumber, String pin) {
        initComponents();
        this.cardNumber = cardNumber != null ? cardNumber : "Not Available";
        this.pin = pin != null ? pin : "Not Available";
        // Show the card number being used
        System.out.println("ATM initialized with card number: " + this.cardNumber);
    }

    /**
     * Creates new form ATM5
     */
    public ATM5() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        buttonCHECKBALANCE = new javax.swing.JButton();
        buttonDEPOSIT = new javax.swing.JButton();
        buttonWITHDRAW = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        buttonEXIT = new javax.swing.JButton();
        buttonACCOUNT = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(0, 0, 102));

        buttonCHECKBALANCE.setFont(new java.awt.Font("Trebuchet MS", 1, 18)); // NOI18N
        buttonCHECKBALANCE.setText("CHECK BALANCE");
        buttonCHECKBALANCE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonCHECKBALANCEActionPerformed(evt);
            }
        });

        buttonDEPOSIT.setFont(new java.awt.Font("Trebuchet MS", 1, 18)); // NOI18N
        buttonDEPOSIT.setText("DEPOSIT");
        buttonDEPOSIT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonDEPOSITActionPerformed(evt);
            }
        });

        buttonWITHDRAW.setFont(new java.awt.Font("Trebuchet MS", 1, 18)); // NOI18N
        buttonWITHDRAW.setText("WITHDRAW");
        buttonWITHDRAW.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonWITHDRAWActionPerformed(evt);
            }
        });

        jLabel1.setBackground(new java.awt.Color(0, 0, 120));
        jLabel1.setFont(new java.awt.Font("Trebuchet MS", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Welcome to SmartBank: ATM Prototype");

        jLabel2.setBackground(new java.awt.Color(0, 0, 120));
        jLabel2.setFont(new java.awt.Font("Trebuchet MS", 1, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Please choose a transaction");

        buttonEXIT.setFont(new java.awt.Font("Trebuchet MS", 1, 18)); // NOI18N
        buttonEXIT.setText("EXIT AND RELEASE CARD");
        buttonEXIT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonEXITActionPerformed(evt);
            }
        });

        buttonACCOUNT.setFont(new java.awt.Font("Trebuchet MS", 1, 18)); // NOI18N
        buttonACCOUNT.setText("ACCOUNT");
        buttonACCOUNT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonACCOUNTActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(72, 72, 72)
                        .addComponent(jLabel2))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(149, 149, 149)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(buttonWITHDRAW, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(buttonDEPOSIT, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(buttonEXIT, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(129, 129, 129)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(buttonACCOUNT, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buttonCHECKBALANCE, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(jLabel1)
                .addGap(34, 34, 34)
                .addComponent(jLabel2)
                .addGap(15, 15, 15)
                .addComponent(buttonACCOUNT, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(buttonCHECKBALANCE, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(buttonDEPOSIT, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(buttonWITHDRAW, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(buttonEXIT, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(23, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void buttonDEPOSITActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonDEPOSITActionPerformed
        
        Object[] options = {"₱100", "₱500", "₱1000", "Custom Amount", "Cancel"};
        int choice = javax.swing.JOptionPane.showOptionDialog(this,
            "Select deposit amount:",
            "Quick Deposit",
            javax.swing.JOptionPane.DEFAULT_OPTION,
            javax.swing.JOptionPane.QUESTION_MESSAGE,
            null,
            options,
            options[0]);
            
        if (choice >= 0 && choice < 4) { 
            double depositAmount;
            
            if (choice == 3) { 
                String depositStr = javax.swing.JOptionPane.showInputDialog(this,
                    "Enter amount to deposit:",
                    "Custom Deposit",
                    javax.swing.JOptionPane.QUESTION_MESSAGE);
                    
                if (depositStr == null || depositStr.trim().isEmpty()) {
                    return; 
                }
                
                try {
                    depositAmount = Double.parseDouble(depositStr);
                } catch (NumberFormatException e) {
                    javax.swing.JOptionPane.showMessageDialog(this,
                        "Please enter a valid number",
                        "Invalid Input",
                        javax.swing.JOptionPane.ERROR_MESSAGE);
                    return;
                }
            } else {
                
                depositAmount = switch (choice) {
                    case 0 -> 100.00;
                    case 1 -> 500.00;
                    case 2 -> 1000.00;
                    default -> 0.00;
                };
            }
            
            if (depositAmount > 0) {
                
                String[] categories = {"Food", "Transport", "Entertainment", "Bills", "Others"};
                int categoryChoice = javax.swing.JOptionPane.showOptionDialog(this,
                    "Select category for deposit:",
                    "Category Selection",
                    javax.swing.JOptionPane.DEFAULT_OPTION,
                    javax.swing.JOptionPane.QUESTION_MESSAGE,
                    null,
                    categories,
                    categories[0]);
                    
                if (categoryChoice >= 0) {
                    String category = categories[categoryChoice];
                    balance += depositAmount;
                    
                    
                    String timestamp = new java.text.SimpleDateFormat("yyyy-MM-dd HH:mm:ss").format(new java.util.Date());
                    transactions.add(new Transaction("DEPOSIT", depositAmount, timestamp, category));
                    
                    javax.swing.JOptionPane.showMessageDialog(this,
                        String.format("Successfully deposited ₱%.2f\nCategory: %s\nNew balance: ₱%.2f", 
                            depositAmount, category, balance),
                        "Deposit Successful",
                        javax.swing.JOptionPane.INFORMATION_MESSAGE);
                }
            } else {
                javax.swing.JOptionPane.showMessageDialog(this,
                    "Please enter a positive amount",
                    "Invalid Amount",
                    javax.swing.JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_buttonDEPOSITActionPerformed

    private void buttonCHECKBALANCEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonCHECKBALANCEActionPerformed
        
        StringBuilder balanceInfo = new StringBuilder();
        balanceInfo.append("=== Balance Information ===\n\n");
        balanceInfo.append(String.format("Current Balance: ₱%.2f\n\n", balance));
        
        
        java.util.Map<String, Double> categoryTotals = new java.util.HashMap<>();
        for (Transaction t : transactions) {
            categoryTotals.merge(t.category, t.amount, Double::sum);
        }
        
        if (!categoryTotals.isEmpty()) {
            balanceInfo.append("Category-wise Summary:\n");
            for (java.util.Map.Entry<String, Double> entry : categoryTotals.entrySet()) {
                balanceInfo.append(String.format("%s: ₱%.2f\n", entry.getKey(), entry.getValue()));
            }
        }
        
        javax.swing.JOptionPane.showMessageDialog(this, 
            balanceInfo.toString(), 
            "Balance Information", 
            javax.swing.JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_buttonCHECKBALANCEActionPerformed

    private void buttonWITHDRAWActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonWITHDRAWActionPerformed
        
        Object[] options = {"₱100", "₱500", "₱1000", "Custom Amount", "Cancel"};
        int choice = javax.swing.JOptionPane.showOptionDialog(this,
            "Select withdrawal amount:",
            "Quick Withdraw",
            javax.swing.JOptionPane.DEFAULT_OPTION,
            javax.swing.JOptionPane.QUESTION_MESSAGE,
            null,
            options,
            options[0]);
            
        if (choice >= 0 && choice < 4) { 
            double withdrawAmount;
            
            if (choice == 3) { 
                String withdrawStr = javax.swing.JOptionPane.showInputDialog(this,
                    "Enter amount to withdraw:",
                    "Custom Withdraw",
                    javax.swing.JOptionPane.QUESTION_MESSAGE);
                    
                if (withdrawStr == null || withdrawStr.trim().isEmpty()) {
                    return; 
                }
                
                try {
                    withdrawAmount = Double.parseDouble(withdrawStr);
                } catch (NumberFormatException e) {
                    javax.swing.JOptionPane.showMessageDialog(this,
                        "Please enter a valid number",
                        "Invalid Input",
                        javax.swing.JOptionPane.ERROR_MESSAGE);
                    return;
                }
            } else {
                
                withdrawAmount = switch (choice) {
                    case 0 -> 100.00;
                    case 1 -> 500.00;
                    case 2 -> 1000.00;
                    default -> 0.00;
                };
            }
            
            if (withdrawAmount > 0) {
                if (withdrawAmount <= balance) {
                    
                    String[] categories = {"Food", "Transport", "Entertainment", "Bills", "Others"};
                    int categoryChoice = javax.swing.JOptionPane.showOptionDialog(this,
                        "Select category for withdrawal:",
                        "Category Selection",
                        javax.swing.JOptionPane.DEFAULT_OPTION,
                        javax.swing.JOptionPane.QUESTION_MESSAGE,
                        null,
                        categories,
                        categories[0]);
                        
                    if (categoryChoice >= 0) {
                        String category = categories[categoryChoice];
                        balance -= withdrawAmount;
                        
                        
                        String timestamp = new java.text.SimpleDateFormat("yyyy-MM-dd HH:mm:ss").format(new java.util.Date());
                        transactions.add(new Transaction("WITHDRAW", withdrawAmount, timestamp, category));
                        
                        javax.swing.JOptionPane.showMessageDialog(this,
                            String.format("Successfully withdrew ₱%.2f\nCategory: %s\nNew balance: ₱%.2f", 
                                withdrawAmount, category, balance),
                            "Withdrawal Successful",
                            javax.swing.JOptionPane.INFORMATION_MESSAGE);
                    }
                } else {
                    javax.swing.JOptionPane.showMessageDialog(this,
                        "Insufficient funds. Your current balance is ₱" + String.format("%.2f", balance),
                        "Insufficient Balance",
                        javax.swing.JOptionPane.ERROR_MESSAGE);
                }
            } else {
                javax.swing.JOptionPane.showMessageDialog(this,
                    "Please enter a positive amount",
                    "Invalid Amount",
                    javax.swing.JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_buttonWITHDRAWActionPerformed

    private void buttonEXITActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonEXITActionPerformed
        
        StringBuilder receipt = new StringBuilder();
        receipt.append("=== SmartBank ATM Receipt ===\n\n");
        receipt.append("Card Number: ").append(cardNumber).append("\n\n");
        receipt.append("Transaction History:\n");
        
        if (transactions.isEmpty()) {
            receipt.append("No transactions made\n");
        } else {
            
            java.util.Map<String, java.util.List<Transaction>> categoryGroups = new java.util.HashMap<>();
            for (Transaction t : transactions) {
                categoryGroups.computeIfAbsent(t.category, k -> new java.util.ArrayList<>()).add(t);
            }
            
            
            for (java.util.Map.Entry<String, java.util.List<Transaction>> entry : categoryGroups.entrySet()) {
                receipt.append("\n").append(entry.getKey()).append(":\n");
                double categoryTotal = 0;
                for (Transaction t : entry.getValue()) {
                    receipt.append("  ").append(t.toString()).append("\n");
                    categoryTotal += t.amount;
                }
                receipt.append("  Category Total: ₱").append(String.format("%.2f", categoryTotal)).append("\n");
            }
        }
        
        receipt.append("\nFinal Balance: ₱").append(String.format("%.2f", balance));
        receipt.append("\n\nThank you for using our services!");
        
        
        javax.swing.JOptionPane.showMessageDialog(this,
            receipt.toString(),
            "Transaction Receipt",
            javax.swing.JOptionPane.INFORMATION_MESSAGE);
            
        
        javax.swing.JOptionPane.showMessageDialog(this,
            "Thank you for using SmartBank ATM.\nYour card has been released.",
            "Card Released",
            javax.swing.JOptionPane.INFORMATION_MESSAGE);
            
        
        this.dispose(); 
        new ATM().setVisible(true); 
    }//GEN-LAST:event_buttonEXITActionPerformed

    private void buttonACCOUNTActionPerformed(java.awt.event.ActionEvent evt) {
        
        StringBuilder accountInfo = new StringBuilder();
        accountInfo.append("=== Account Information ===\n\n");
        accountInfo.append("Card Number: ").append(cardNumber).append("\n");
        accountInfo.append("Password: ").append(pin).append("\n");
        
        javax.swing.JOptionPane.showMessageDialog(this,
            accountInfo.toString(),
            "Account Details",
            javax.swing.JOptionPane.INFORMATION_MESSAGE);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ATM5.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ATM5.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ATM5.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ATM5.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ATM5().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonACCOUNT;
    private javax.swing.JButton buttonCHECKBALANCE;
    private javax.swing.JButton buttonDEPOSIT;
    private javax.swing.JButton buttonEXIT;
    private javax.swing.JButton buttonWITHDRAW;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables
}
